{"version":3,"file":"drawing.js","names":["CTMarker","require","Point","EMU","Drawing","_anchorType","_anchorFrom","_anchorTo","_editAs","_position","type","types","indexOf","TypeError","join","val","obj","undefined","Object","col","colOff","row","rowOff","from","to","editAs","anchorType","anchorFrom","anchorTo","cx","cy","thisCx","thisCy","value","module","exports"],"sources":["../../../source/lib/drawing/drawing.js"],"sourcesContent":["const CTMarker = require('../classes/ctMarker.js');\nconst Point = require('../classes/point.js');\nconst EMU = require('../classes/emu.js');\n\nclass Drawing {\n    /**\n     * Element representing an Excel Drawing superclass\n     * @property {String} anchorType Proprty for type of anchor. One of 'absoluteAnchor', 'oneCellAnchor', 'twoCellAnchor'\n     * @property {CTMarker} anchorFrom Property for the top left corner position of drawing\n     * @property {CTMarker} anchorTo Property for the bottom left corner position of drawing\n     * @property {String} editAs Property that states how to interact with the Drawing in Excel. One of 'absolute', 'oneCell', 'twoCell'\n     * @property {Point} _position Internal property for position on Excel Worksheet when drawing type is absoluteAnchor\n     * @returns {Drawing} Excel Drawing \n     */\n    constructor() {\n        this._anchorType = null;\n        this._anchorFrom = null;\n        this._anchorTo = null;\n        this._editAs = null;\n        this._position = null;\n    }\n\n    get anchorType() {\n        return this._anchorType;\n    }\n    set anchorType(type) {\n        let types = ['absoluteAnchor', 'oneCellAnchor', 'twoCellAnchor'];\n        if (types.indexOf(type) < 0) {\n            throw new TypeError('Invalid option for anchor type. anchorType must be one of ' + types.join(', '));\n        }\n        this._anchorType = type;\n    }\n\n    get editAs() {\n        return this._editAs;\n    }\n    set editAs(val) {\n        let types = ['absolute', 'oneCell', 'twoCell'];\n        if (types.indexOf(val) < 0) {\n            throw new TypeError('Invalid option for editAs. editAs must be one of ' + types.join(', '));\n        }\n        this._editAs = val;\n    }\n\n    get anchorFrom() {\n        return this._anchorFrom;\n    }\n    set anchorFrom(obj) {\n        if (obj !== undefined && obj instanceof Object) {\n            this._anchorFrom = new CTMarker(obj.col - 1, obj.colOff, obj.row - 1, obj.rowOff);\n        }\n    }\n\n    get anchorTo() {\n        return this._anchorTo;\n    }\n    set anchorTo(obj) {\n        if (obj !== undefined && obj instanceof Object) {\n            this._anchorTo = new CTMarker(obj.col - 1, obj.colOff, obj.row - 1, obj.rowOff);\n        }\n    }\n\n    /**\n     * @alias Drawing.achor\n     * @desc Sets the postion and anchor properties of the Drawing\n     * @func Drawing.achor\n     * @param {String} type Anchor type of drawing\n     * @param {Object} from Properties for achorFrom property\n     * @param {Number} from.col Left edge of drawing will align with left edge of this column\n     * @param {String} from.colOff Offset. Drawing will be shifted to the right the specified amount. Float followed by measure [0-9]+(\\.[0-9]+)?(mm|cm|in|pt|pc|pi). i.e '10.5mm'\n     * @param {Number} from.row Top edge of drawing will align with top edge of this row\n     * @param {String} from.rowOff Offset. Drawing will be shifted down the specified amount. Float followed by measure [0-9]+(\\.[0-9]+)?(mm|cm|in|pt|pc|pi). i.e '10.5mm'\n     * @param {Object} to Properties for anchorTo property\n     * @param {Number} to.col Left edge of drawing will align with left edge of this column\n     * @param {String} to.colOff Offset. Drawing will be shifted to the right the specified amount. Float followed by measure [0-9]+(\\.[0-9]+)?(mm|cm|in|pt|pc|pi). i.e '10.5mm'\n     * @param {Number} to.row Top edge of drawing will align with top edge of this row\n     * @param {String} to.rowOff Offset. Drawing will be shifted down the specified amount. Float followed by measure [0-9]+(\\.[0-9]+)?(mm|cm|in|pt|pc|pi). i.e '10.5mm'\n     * @returns {Drawing} Excel Drawing with attached methods\n     */\n    anchor(type, from, to) {\n        if (type === 'twoCellAnchor') {\n            if (from === undefined || to === undefined) {\n                throw new TypeError('twoCellAnchor requires both from and two markers');\n            }\n            this.editAs = 'oneCell';\n        }\n        this.anchorType = type;\n        this.anchorFrom = from;\n        this.anchorTo = to;\n        return this;\n    }\n\n    /**\n     * @alias Drawing.position\n     * @desc The position of the top left corner of the image on the Worksheet\n     * @func Drawing.position\n     * @param {ST_PositiveUniversalMeasure} cx Postion from left of Worksheet edge\n     * @param {ST_PositiveUniversalMeasure} cy Postion from top of Worksheet edge\n     */\n    position(cx, cy) {\n        this.anchorType = 'absoluteAnchor';\n        let thisCx = new EMU(cx);\n        let thisCy = new EMU(cy);\n        this._position = new Point(thisCx.value, thisCy.value);\n    }\n}\n\nmodule.exports = Drawing;"],"mappings":"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"}