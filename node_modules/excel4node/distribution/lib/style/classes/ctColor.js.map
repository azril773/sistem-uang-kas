{"version":3,"file":"ctColor.js","names":["types","require","xmlbuilder","CTColor","color","type","rgb","theme","colorScheme","toLowerCase","undefined","excelColor","getColor","e","TypeError","opts","join","ele","colorEle","att","module","exports"],"sources":["../../../../source/lib/style/classes/ctColor.js"],"sourcesContent":["const types = require('../../types/index.js');\nconst xmlbuilder = require('xmlbuilder');\n\nclass CTColor { //ยง18.8.3 && ยง18.8.19\n    /** \n     * @class CTColor\n     * @desc Excel color representation\n     * @param {String} color Excel Color scheme or Excel Color name or HEX value of Color\n     * @properties {String} type Type of color object. defaults to rgb\n     * @properties {String} rgb ARGB representation of Color\n     * @properties {String} theme Excel Color Scheme\n     * @returns {CTColor}\n     */\n    constructor(color) {\n        this.type;\n        this.rgb;\n        this.theme; //ยง20.1.6.2 clrScheme (Color Scheme) : types.colorSchemes\n\n        if (typeof color === 'string') {\n            if (types.colorScheme[color.toLowerCase()] !== undefined) {\n                this.theme = color;\n                this.type = 'theme';\n            } else {\n                try {\n                    this.rgb = types.excelColor.getColor(color);\n                    this.type = 'rgb';\n                } catch (e) {\n                    throw new TypeError(`Fill color must be an RGB value, Excel color (${types.excelColor.opts.join(', ')}) or Excel theme (${types.colorScheme.opts.join(', ')})`);\n                }\n            }\n        }\n    }\n\n    /** \n     * @func CTColor.toObject\n     * @desc Converts the CTColor instance to a javascript object\n     * @returns {Object}\n     */\n    toObject() {\n        return this[this.type];\n    }\n\n    /**\n     * @alias CTColor.addToXMLele\n     * @desc When generating Workbook output, attaches style to the styles xml file\n     * @func CTColor.addToXMLele\n     * @param {xmlbuilder.Element} ele Element object of the xmlbuilder module\n     */\n    addToXMLele(ele) {\n        let colorEle = ele.ele('color');\n        colorEle.att(this.type, this[this.type]);\n    }\n}\n\nmodule.exports = CTColor;"],"mappings":";;;;;;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,sBAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,YAAD,CAA1B;;IAEME,O;EAAU;;EACZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,iBAAYC,KAAZ,EAAmB;IAAA;;IACf,KAAKC,IAAL;IACA,KAAKC,GAAL;IACA,KAAKC,KAAL,CAHe,CAGH;;IAEZ,IAAI,OAAOH,KAAP,KAAiB,QAArB,EAA+B;MAC3B,IAAIJ,KAAK,CAACQ,WAAN,CAAkBJ,KAAK,CAACK,WAAN,EAAlB,MAA2CC,SAA/C,EAA0D;QACtD,KAAKH,KAAL,GAAaH,KAAb;QACA,KAAKC,IAAL,GAAY,OAAZ;MACH,CAHD,MAGO;QACH,IAAI;UACA,KAAKC,GAAL,GAAWN,KAAK,CAACW,UAAN,CAAiBC,QAAjB,CAA0BR,KAA1B,CAAX;UACA,KAAKC,IAAL,GAAY,KAAZ;QACH,CAHD,CAGE,OAAOQ,CAAP,EAAU;UACR,MAAM,IAAIC,SAAJ,yDAA+Dd,KAAK,CAACW,UAAN,CAAiBI,IAAjB,CAAsBC,IAAtB,CAA2B,IAA3B,CAA/D,+BAAoHhB,KAAK,CAACQ,WAAN,CAAkBO,IAAlB,CAAuBC,IAAvB,CAA4B,IAA5B,CAApH,OAAN;QACH;MACJ;IACJ;EACJ;EAED;AACJ;AACA;AACA;AACA;;;;;WACI,oBAAW;MACP,OAAO,KAAK,KAAKX,IAAV,CAAP;IACH;IAED;AACJ;AACA;AACA;AACA;AACA;;;;WACI,qBAAYY,GAAZ,EAAiB;MACb,IAAIC,QAAQ,GAAGD,GAAG,CAACA,GAAJ,CAAQ,OAAR,CAAf;MACAC,QAAQ,CAACC,GAAT,CAAa,KAAKd,IAAlB,EAAwB,KAAK,KAAKA,IAAV,CAAxB;IACH;;;;;;AAGLe,MAAM,CAACC,OAAP,GAAiBlB,OAAjB"}