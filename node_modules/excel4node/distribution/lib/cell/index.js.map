{"version":3,"file":"index.js","names":["deepmerge","require","Cell","Row","Comment","Column","Style","utils","util","validXmlRegex","removeInvalidXml","str","Array","from","map","c","cp","codePointAt","match","join","stringSetter","val","logger","ws","wb","warn","JSON","stringify","excelRefs","merged","cells","forEach","string","getStringIndex","complexStringSetter","numberSetter","undefined","parseFloat","TypeError","format","i","number","booleanSetter","toString","toLowerCase","bool","formulaSetter","formula","dateSetter","thisDate","Date","isNaN","getTime","date","dtStyle","numberFormat","opts","dateFormat","styleSetter","bind","thisStyle","toObject","Object","borderEdges","border","outline","left","firstCol","right","lastCol","top","firstRow","bottom","lastRow","thisCellsBorder","row","col","s","thisCellStyle","createStyle","style","ids","cellXfs","curStyle","styles","newStyleOpts","mergedStyle","hyperlinkSetter","url","displayStr","tooltip","ref","hyperlinkCollection","add","location","display","font","color","underline","commentSetter","comment","options","comments","r","mergeCells","cellBlock","length","sort","sortCellRefs","cellRange","rangeCells","okToMerge","mergedCells","cr","curCells","getAllCellsInExcelRange","intersection","arrayIntersectSafe","error","push","matrix","tmpObj","rows","keys","a","b","cellAccessor","row1","col1","row2","col2","isMerged","theseCells","lastUsedRow","lastUsedCol","getExcelAlpha","cellRefs","indexOf","prototype","link","module","exports"],"sources":["../../../source/lib/cell/index.js"],"sourcesContent":["const deepmerge = require('deepmerge');\nconst Cell = require('./cell.js');\nconst Row = require('../row/row.js');\nconst Comment = require('../classes/comment');\nconst Column = require('../column/column.js');\nconst Style = require('../style/style.js');\nconst utils = require('../utils.js');\nconst util = require('util');\n\nconst validXmlRegex = /[\\u0009\\u000a\\u000d\\u0020-\\uD7FF\\uE000-\\uFFFD]/u;\n\n/**\n * The list of valid characters is\n * #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]\n *\n * We need to test codepoints numerically, instead of regex characters above 65536 (0x10000),\n */\nfunction removeInvalidXml(str) {\n    return Array.from(str).map(c => {\n        const cp = c.codePointAt(0);\n        if (cp >= 65536 && cp <= 1114111) {\n            return c\n        } else if (c.match(validXmlRegex)) {\n            return c;\n        } else {\n            return '';\n        }\n    }).join('');\n}\n\nfunction stringSetter(val) {\n    let logger = this.ws.wb.logger;\n\n    if (typeof (val) !== 'string') {\n        logger.warn('Value sent to String function of cells %s was not a string, it has type of %s',\n            JSON.stringify(this.excelRefs),\n            typeof (val));\n        val = '';\n    }\n    val = removeInvalidXml(val);\n\n    if (!this.merged) {\n        this.cells.forEach((c) => {\n            c.string(this.ws.wb.getStringIndex(val));\n        });\n    } else {\n        let c = this.cells[0];\n        c.string(this.ws.wb.getStringIndex(val));\n    }\n    return this;\n}\n\nfunction complexStringSetter(val) {\n    if (!this.merged) {\n        this.cells.forEach((c) => {\n            c.string(this.ws.wb.getStringIndex(val));\n        });\n    } else {\n        let c = this.cells[0];\n        c.string(this.ws.wb.getStringIndex(val));\n    }\n    return this;\n}\n\nfunction numberSetter(val) {\n    if (val === undefined || parseFloat(val) !== val) {\n        throw new TypeError(util.format('Value sent to Number function of cells %s was not a number, it has type of %s and value of %s',\n            JSON.stringify(this.excelRefs),\n            typeof (val),\n            val\n        ));\n    }\n    val = parseFloat(val);\n\n    if (!this.merged) {\n        this.cells.forEach((c, i) => {\n            c.number(val);\n        });\n    } else {\n        var c = this.cells[0];\n        c.number(val);\n    }\n    return this;\n}\n\nfunction booleanSetter(val) {\n    if (val === undefined || typeof (val.toString().toLowerCase() === 'true' || ((val.toString().toLowerCase() === 'false') ? false : val)) !== 'boolean') {\n        throw new TypeError(util.format('Value sent to Bool function of cells %s was not a bool, it has type of %s and value of %s',\n            JSON.stringify(this.excelRefs),\n            typeof (val),\n            val\n        ));\n    }\n    val = val.toString().toLowerCase() === 'true';\n\n    if (!this.merged) {\n        this.cells.forEach((c, i) => {\n            c.bool(val.toString());\n        });\n    } else {\n        var c = this.cells[0];\n        c.bool(val.toString());\n    }\n    return this;\n}\n\nfunction formulaSetter(val) {\n    if (typeof (val) !== 'string') {\n        throw new TypeError(util.format('Value sent to Formula function of cells %s was not a string, it has type of %s', JSON.stringify(this.excelRefs), typeof (val)));\n    }\n    if (this.merged !== true) {\n        this.cells.forEach((c, i) => {\n            c.formula(val);\n        });\n    } else {\n        var c = this.cells[0];\n        c.formula(val);\n    }\n\n    return this;\n}\n\nfunction dateSetter(val) {\n    let thisDate = new Date(val);\n    if (isNaN(thisDate.getTime())) {\n        throw new TypeError(util.format('Invalid date sent to date function of cells. %s could not be converted to a date.', val));\n    }\n    if (this.merged !== true) {\n        this.cells.forEach((c, i) => {\n            c.date(thisDate);\n        });\n    } else {\n        var c = this.cells[0];\n        c.date(thisDate);\n    }\n    const dtStyle = new Style(this.ws.wb, {\n        numberFormat: '[$-409]' + this.ws.wb.opts.dateFormat\n    });\n    return styleSetter.bind(this)(dtStyle);\n}\n\nfunction styleSetter(val) {\n    let thisStyle;\n    if (val instanceof Style) {\n        thisStyle = val.toObject();\n    } else if (val instanceof Object) {\n        thisStyle = val;\n    } else {\n        throw new TypeError(util.format('Parameter sent to Style function must be an instance of a Style or a style configuration object'));\n    }\n\n    let borderEdges = {};\n    if (thisStyle.border && thisStyle.border.outline) {\n        borderEdges.left = this.firstCol;\n        borderEdges.right = this.lastCol;\n        borderEdges.top = this.firstRow;\n        borderEdges.bottom = this.lastRow;\n    }\n\n    this.cells.forEach((c) => {\n        if (thisStyle.border && thisStyle.border.outline) {\n            let thisCellsBorder = {};\n            if (c.row === borderEdges.top && thisStyle.border.top) {\n                thisCellsBorder.top = thisStyle.border.top;\n            }\n            if (c.row === borderEdges.bottom && thisStyle.border.bottom) {\n                thisCellsBorder.bottom = thisStyle.border.bottom;\n            }\n            if (c.col === borderEdges.left && thisStyle.border.left) {\n                thisCellsBorder.left = thisStyle.border.left;\n            }\n            if (c.col === borderEdges.right && thisStyle.border.right) {\n                thisCellsBorder.right = thisStyle.border.right;\n            }\n            thisStyle.border = thisCellsBorder;\n        }\n\n        if (c.s === 0) {\n            let thisCellStyle = this.ws.wb.createStyle(thisStyle);\n            c.style(thisCellStyle.ids.cellXfs);\n        } else {\n            let curStyle = this.ws.wb.styles[c.s];\n            let newStyleOpts = deepmerge(curStyle.toObject(), thisStyle);\n            let mergedStyle = this.ws.wb.createStyle(newStyleOpts);\n            c.style(mergedStyle.ids.cellXfs);\n        }\n    });\n    return this;\n}\n\nfunction hyperlinkSetter(url, displayStr, tooltip) {\n    this.excelRefs.forEach((ref) => {\n        displayStr = typeof displayStr === 'string' ? displayStr : url;\n        this.ws.hyperlinkCollection.add({\n            location: url,\n            display: displayStr,\n            tooltip: tooltip,\n            ref: ref\n        });\n    });\n    stringSetter.bind(this)(displayStr);\n    return styleSetter.bind(this)({\n        font: {\n            color: 'Blue',\n            underline: true\n        }\n    });\n}\n\nfunction commentSetter(comment, options) {\n    if (this.merged !== true) {\n        this.cells.forEach((c, i) => {\n            this.ws.comments[c.r] = new Comment(c.r, comment, options)\n        });\n    } else {\n        var c = this.cells[0];\n        this.ws.comments[c.r] = new Comment(c.r, comment, options)\n    }\n    return this;\n}\n\nfunction mergeCells(cellBlock) {\n    let excelRefs = cellBlock.excelRefs;\n    if (excelRefs instanceof Array && excelRefs.length > 0) {\n        excelRefs.sort(utils.sortCellRefs);\n\n        let cellRange = excelRefs[0] + ':' + excelRefs[excelRefs.length - 1];\n        let rangeCells = excelRefs;\n\n        let okToMerge = true;\n        cellBlock.ws.mergedCells.forEach((cr) => {\n            // Check to see if currently merged cells contain cells in new merge request\n            let curCells = utils.getAllCellsInExcelRange(cr);\n            let intersection = utils.arrayIntersectSafe(rangeCells, curCells);\n            if (intersection.length > 0) {\n                okToMerge = false;\n                cellBlock.ws.wb.logger.error(`Invalid Range for: ${cellRange}. Some cells in this range are already included in another merged cell range: ${cr}.`);\n            }\n        });\n        if (okToMerge) {\n            cellBlock.ws.mergedCells.push(cellRange);\n        }\n    } else {\n        throw new TypeError(util.format('excelRefs variable sent to mergeCells function must be an array with length > 0'));\n    }\n}\n\n/**\n * @class cellBlock\n */\nclass cellBlock {\n\n    constructor() {\n        this.ws;\n        this.cells = [];\n        this.excelRefs = [];\n        this.merged = false;\n    }\n\n    get matrix() {\n        let matrix = [];\n        let tmpObj = {};\n        this.cells.forEach((c) => {\n            if (!tmpObj[c.row]) {\n                tmpObj[c.row] = [];\n            }\n            tmpObj[c.row].push(c);\n        });\n        let rows = Object.keys(tmpObj);\n        rows.forEach((r) => {\n            tmpObj[r].sort((a, b) => {\n                return a.col - b.col;\n            });\n            matrix.push(tmpObj[r]);\n        });\n        return matrix;\n    }\n\n    get firstRow() {\n        let firstRow;\n        this.cells.forEach((c) => {\n            if (c.row < firstRow || firstRow === undefined) {\n                firstRow = c.row;\n            }\n        });\n        return firstRow;\n    }\n\n    get lastRow() {\n        let lastRow;\n        this.cells.forEach((c) => {\n            if (c.row > lastRow || lastRow === undefined) {\n                lastRow = c.row;\n            }\n        });\n        return lastRow;\n    }\n\n    get firstCol() {\n        let firstCol;\n        this.cells.forEach((c) => {\n            if (c.col < firstCol || firstCol === undefined) {\n                firstCol = c.col;\n            }\n        });\n        return firstCol;\n    }\n\n    get lastCol() {\n        let lastCol;\n        this.cells.forEach((c) => {\n            if (c.col > lastCol || lastCol === undefined) {\n                lastCol = c.col;\n            }\n        });\n        return lastCol;\n    }\n}\n\n/**\n * Module repesenting a Cell Accessor\n * @alias Worksheet.cell\n * @namespace\n * @func Worksheet.cell\n * @desc Access a range of cells in order to manipulate values\n * @param {Number} row1 Row of top left cell\n * @param {Number} col1 Column of top left cell\n * @param {Number} row2 Row of bottom right cell (optional)\n * @param {Number} col2 Column of bottom right cell (optional)\n * @param {Boolean} isMerged Merged the cell range into a single cell\n * @returns {cellBlock}\n */\nfunction cellAccessor(row1, col1, row2, col2, isMerged) {\n    let theseCells = new cellBlock();\n    theseCells.ws = this;\n\n    row2 = row2 ? row2 : row1;\n    col2 = col2 ? col2 : col1;\n\n    if (row2 > this.lastUsedRow) {\n        this.lastUsedRow = row2;\n    }\n\n    if (col2 > this.lastUsedCol) {\n        this.lastUsedCol = col2;\n    }\n\n    for (let r = row1; r <= row2; r++) {\n        for (let c = col1; c <= col2; c++) {\n            let ref = `${utils.getExcelAlpha(c)}${r}`;\n            if (!this.cells[ref]) {\n                this.cells[ref] = new Cell(r, c);\n            }\n            if (!this.rows[r]) {\n                this.rows[r] = new Row(r, this);\n            }\n            if (this.rows[r].cellRefs.indexOf(ref) < 0) {\n                this.rows[r].cellRefs.push(ref);\n            }\n\n            theseCells.cells.push(this.cells[ref]);\n            theseCells.excelRefs.push(ref);\n        }\n    }\n    if (isMerged) {\n        theseCells.merged = true;\n        mergeCells(theseCells);\n    }\n\n    return theseCells;\n}\n\n/**\n * @alias cellBlock.string\n * @func cellBlock.string\n * @param {String} val Value of String\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.string = function (val) {\n    if (val instanceof Array) {\n        return complexStringSetter.bind(this)(val);\n    } else {\n        return stringSetter.bind(this)(val);\n    }\n};\n\n/**\n * @alias cellBlock.style\n * @func cellBlock.style\n * @param {Object} style One of a Style instance or an object with Style parameters\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.style = styleSetter;\n\n/**\n * @alias cellBlock.number\n * @func cellBlock.number\n * @param {Number} val Value of Number\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.number = numberSetter;\n\n/**\n * @alias cellBlock.bool\n * @func cellBlock.bool\n * @param {Boolean} val Value of Boolean\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.bool = booleanSetter;\n\n/**\n * @alias cellBlock.formula\n * @func cellBlock.formula\n * @param {String} val Excel style formula as string\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.formula = formulaSetter;\n\n/**\n * @alias cellBlock.date\n * @func cellBlock.date\n * @param {Date} val Value of Date\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.date = dateSetter;\n\n/**\n * @alias cellBlock.link\n * @func cellBlock.link\n * @param {String} url Value of Hyperlink URL\n * @param {String} displayStr Value of String representation of URL\n * @param {String} tooltip Value of text to display as hover\n * @returns {cellBlock} Block of cells with attached methods\n */\ncellBlock.prototype.link = hyperlinkSetter;\n\ncellBlock.prototype.comment = commentSetter;\n\nmodule.exports = cellAccessor;"],"mappings":"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"}