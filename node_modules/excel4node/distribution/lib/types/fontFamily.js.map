{"version":3,"file":"fontFamily.js","names":["items","opts","forEach","o","i","prototype","validate","val","TypeError","join","toLowerCase","undefined","name","hasOwnProperty","push","module","exports"],"sources":["../../../source/lib/types/fontFamily.js"],"sourcesContent":["function items() {\n    this.opts = [//ยง18.8.18 family (Font Family)\n        'n/a', \n        'roman', \n        'swiss', \n        'modern', \n        'script', \n        'decorative'\n    ];\n    this.opts.forEach((o, i) => {\n        this[o] = i;\n    });\n}\n\n\nitems.prototype.validate = function (val) {\n    if (typeof val !== 'string') {\n        throw new TypeError(`Invalid value for Font Family ${val}; Value must be one of ${this.opts.join(', ')}`);\n    }\n\n    if (this[val.toLowerCase()] === undefined) {\n        let opts = [];\n        for (let name in this) {\n            if (this.hasOwnProperty(name)) {\n                opts.push(name);\n            }\n        }\n        throw new TypeError(`Invalid value for Font Family ${val}; Value must be one of ${this.opts.join(', ')}`);\n    } else {\n        return true;\n    }\n};\n\nmodule.exports = new items();"],"mappings":";;AAAA,SAASA,KAAT,GAAiB;EAAA;;EACb,KAAKC,IAAL,GAAY,CAAC;EACT,KADQ,EAER,OAFQ,EAGR,OAHQ,EAIR,QAJQ,EAKR,QALQ,EAMR,YANQ,CAAZ;EAQA,KAAKA,IAAL,CAAUC,OAAV,CAAkB,UAACC,CAAD,EAAIC,CAAJ,EAAU;IACxB,KAAI,CAACD,CAAD,CAAJ,GAAUC,CAAV;EACH,CAFD;AAGH;;AAGDJ,KAAK,CAACK,SAAN,CAAgBC,QAAhB,GAA2B,UAAUC,GAAV,EAAe;EACtC,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;IACzB,MAAM,IAAIC,SAAJ,yCAA+CD,GAA/C,oCAA4E,KAAKN,IAAL,CAAUQ,IAAV,CAAe,IAAf,CAA5E,EAAN;EACH;;EAED,IAAI,KAAKF,GAAG,CAACG,WAAJ,EAAL,MAA4BC,SAAhC,EAA2C;IACvC,IAAIV,IAAI,GAAG,EAAX;;IACA,KAAK,IAAIW,IAAT,IAAiB,IAAjB,EAAuB;MACnB,IAAI,KAAKC,cAAL,CAAoBD,IAApB,CAAJ,EAA+B;QAC3BX,IAAI,CAACa,IAAL,CAAUF,IAAV;MACH;IACJ;;IACD,MAAM,IAAIJ,SAAJ,yCAA+CD,GAA/C,oCAA4E,KAAKN,IAAL,CAAUQ,IAAV,CAAe,IAAf,CAA5E,EAAN;EACH,CARD,MAQO;IACH,OAAO,IAAP;EACH;AACJ,CAhBD;;AAkBAM,MAAM,CAACC,OAAP,GAAiB,IAAIhB,KAAJ,EAAjB"}