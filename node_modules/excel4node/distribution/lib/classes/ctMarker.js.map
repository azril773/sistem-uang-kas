{"version":3,"file":"ctMarker.js","names":["EMU","require","CTMarker","colId","colOffset","rowId","rowOffset","_col","_colOff","_row","_rowOff","val","parseInt","TypeError","value","module","exports"],"sources":["../../../source/lib/classes/ctMarker.js"],"sourcesContent":["let EMU = require('./emu.js');\n\nclass CTMarker {\n    /**\n     * Element representing an Excel position marker\n     * @param {Number} colId Column Number\n     * @param {String} colOffset Offset stating how far right to shift the start edge\n     * @param {Number} rowId Row Number\n     * @param {String} rowOffset Offset stating how far down to shift the start edge\n     * @property {Number} col Column number\n     * @property {EMU} colOff EMUs of right shift\n     * @property {Number} row Row number\n     * @property {EMU} rowOff EMUs of top shift\n     * @returns {CTMarker} Excel CTMarker \n     */\n    constructor(colId, colOffset, rowId, rowOffset) {\n        this._col = colId;\n        this._colOff = new EMU(colOffset);\n        this._row = rowId;\n        this._rowOff = new EMU(rowOffset);\n    }\n\n    get col() {\n        return this._col;\n    }\n    set col(val) {\n        if (parseInt(val, 10) !== val || val < 0) {\n            throw new TypeError('CTMarker column must be a positive integer');\n        }\n        this._col = val;\n    }\n\n    get row() {\n        return this._row;\n    }\n    set row(val) {\n        if (parseInt(val, 10) !== val || val < 0) {\n            throw new TypeError('CTMarker row must be a positive integer');\n        }\n        this._row = val;\n    }\n\n    get colOff() {\n        return this._colOff.value;\n    }\n    set colOff(val) {\n        this._colOff = new EMU(val);\n    }\n\n    get rowOff() {\n        return this._rowOff.value;\n    }\n    set rowOff(val) {\n        this._rowOff = new EMU(val);\n    }\n}\n\nmodule.exports = CTMarker;"],"mappings":";;;;;;;;AAAA,IAAIA,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAjB;;IAEMC,Q;EACF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,kBAAYC,KAAZ,EAAmBC,SAAnB,EAA8BC,KAA9B,EAAqCC,SAArC,EAAgD;IAAA;;IAC5C,KAAKC,IAAL,GAAYJ,KAAZ;IACA,KAAKK,OAAL,GAAe,IAAIR,GAAJ,CAAQI,SAAR,CAAf;IACA,KAAKK,IAAL,GAAYJ,KAAZ;IACA,KAAKK,OAAL,GAAe,IAAIV,GAAJ,CAAQM,SAAR,CAAf;EACH;;;;SAED,eAAU;MACN,OAAO,KAAKC,IAAZ;IACH,C;SACD,aAAQI,GAAR,EAAa;MACT,IAAIC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAR,KAAsBA,GAAtB,IAA6BA,GAAG,GAAG,CAAvC,EAA0C;QACtC,MAAM,IAAIE,SAAJ,CAAc,4CAAd,CAAN;MACH;;MACD,KAAKN,IAAL,GAAYI,GAAZ;IACH;;;SAED,eAAU;MACN,OAAO,KAAKF,IAAZ;IACH,C;SACD,aAAQE,GAAR,EAAa;MACT,IAAIC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAAR,KAAsBA,GAAtB,IAA6BA,GAAG,GAAG,CAAvC,EAA0C;QACtC,MAAM,IAAIE,SAAJ,CAAc,yCAAd,CAAN;MACH;;MACD,KAAKJ,IAAL,GAAYE,GAAZ;IACH;;;SAED,eAAa;MACT,OAAO,KAAKH,OAAL,CAAaM,KAApB;IACH,C;SACD,aAAWH,GAAX,EAAgB;MACZ,KAAKH,OAAL,GAAe,IAAIR,GAAJ,CAAQW,GAAR,CAAf;IACH;;;SAED,eAAa;MACT,OAAO,KAAKD,OAAL,CAAaI,KAApB;IACH,C;SACD,aAAWH,GAAX,EAAgB;MACZ,KAAKD,OAAL,GAAe,IAAIV,GAAJ,CAAQW,GAAR,CAAf;IACH;;;;;;AAGLI,MAAM,CAACC,OAAP,GAAiBd,QAAjB"}