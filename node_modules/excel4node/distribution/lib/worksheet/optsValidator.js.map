{"version":3,"file":"optsValidator.js","names":["types","require","optsTypes","getObjItem","obj","key","returnObj","levels","split","length","thisLevelKey","shift","e","validator","val","type","sizes","Object","keys","paperSize","indexOf","TypeError","join","pageOrder","validate","orientation","positiveUniversalMeasure","cellComment","printError","pane","paneState","parseFloat","parseInt","traverse","o","keyParts","func","i","thisKeyParts","concat","thisKey","thisType","thisItem","module","exports","opts"],"sources":["../../../source/lib/worksheet/optsValidator.js"],"sourcesContent":["const types = require('../types/index.js');\n\nconst optsTypes = {\n    'margins': {\n        'bottom': 'Float',\n        'footer': 'Float',\n        'header': 'Float',\n        'left': 'Float',\n        'right': 'Float',\n        'top': 'Float'\n    },\n    'printOptions': {\n        'centerHorizontal': 'Boolean',\n        'centerVertical': 'Boolean',\n        'printGridLines': 'Boolean',\n        'printHeadings': 'Boolean'\n    \n    },\n    'pageSetup': {\n        'blackAndWhite': 'Boolean',\n        'cellComments': 'CELL_COMMENTS',\n        'copies': 'Integer',\n        'draft': 'Boolean',\n        'errors': 'PRINT_ERROR',\n        'firstPageNumber': 'Boolean',\n        'fitToHeight': 'Integer',\n        'fitToWidth': 'Integer',\n        'horizontalDpi': 'Integer',\n        'orientation': 'ORIENTATION',\n        'pageOrder': 'PAGE_ORDER',\n        'paperHeight': 'POSITIVE_UNIVERSAL_MEASURE',\n        'paperSize': 'PAPER_SIZE',\n        'paperWidth': 'POSITIVE_UNIVERSAL_MEASURE',\n        'scale': 'Integer',\n        'useFirstPageNumber': 'Boolean',\n        'usePrinterDefaults': 'Boolean',\n        'verticalDpi': 'Integer'\n    },\n    'headerFooter': {\n        'evenFooter': 'String',\n        'evenHeader': 'String',\n        'firstFooter': 'String',\n        'firstHeader': 'String',\n        'oddFooter': 'String',\n        'oddHeader': 'String',\n        'alignWithMargins': 'Boolean',\n        'differentFirst': 'Boolean',\n        'differentOddEven': 'Boolean',\n        'scaleWithDoc': 'Boolean'\n    },\n    'sheetView': {\n        'pane': {\n            'activePane': 'PANE',\n            'state': 'PANE_STATE',\n            'topLeftCell': null,\n            'xSplit': null,\n            'ySplit': null\n        },\n        'tabSelected': null,\n        'workbookViewId': null,\n        'rightToLeft': null,\n        'showGridLines': null,\n        'zoomScale': null,\n        'zoomScaleNormal': null,\n        'zoomScalePageLayoutView': null\n    },\n    'sheetFormat': {\n        'baseColWidth': null,\n        'customHeight': null,\n        'defaultColWidth': null,\n        'defaultRowHeight': null,\n        'outlineLevelCol': null,\n        'outlineLevelRow': null,\n        'thickBottom': null,\n        'thickTop': null,\n        'zeroHeight': null\n    },\n    'sheetProtection': {\n        'autoFilter': null,\n        'deleteColumns': null,\n        'deleteRow': null,\n        'formatCells': null,\n        'formatColumns': null,\n        'formatRows': null,\n        'hashValue': null,\n        'insertColumns': null,\n        'insertHyperlinks': null,\n        'insertRows': null,\n        'objects': null,\n        'password': null,\n        'pivotTables': null,\n        'scenarios': null,\n        'selectLockedCells': null,\n        'selectUnlockedCell': null,\n        'sheet': null,\n        'sort': null\n    },\n    'outline': {\n        'summaryBelow': null\n    },\n    'autoFilter': {\n        'startRow': null,\n        'endRow': null,\n        'startCol': null,\n        'endCol': null,\n        'filters': null\n    },\n    'hidden': 'Boolean'\n};\n\nlet getObjItem = (obj, key) => {\n    let returnObj = obj;\n    let levels = key.split('.');\n\n    while (levels.length > 0) {\n        let thisLevelKey = levels.shift();\n        try {\n            returnObj = returnObj[thisLevelKey];\n        } catch (e) {\n            //returnObj = undefined;\n        }\n    }\n    return returnObj;\n};\n\nlet validator = function (key, val, type) {\n    switch (type) {\n\n    case 'PAPER_SIZE': \n        let sizes = Object.keys(types.paperSize);\n        if (sizes.indexOf(val) < 0) {\n            throw new TypeError('Invalid value for ' + key + '. Value must be one of ' + sizes.join(', '));\n        }\n        break;\n\n    case 'PAGE_ORDER':\n        types.pageOrder.validate(val);\n        break;\n\n    case 'ORIENTATION':\n        types.orientation.validate(val);\n        break;\n\n    case 'POSITIVE_UNIVERSAL_MEASURE': \n        types.positiveUniversalMeasure.validate(val);\n        break;\n\n    case 'CELL_COMMENTS':\n        types.cellComment.validate(val);\n        break;\n\n    case 'PRINT_ERROR': \n        types.printError.validate(val);\n        break;\n\n    case 'PANE':\n        types.pane.validate(val);\n        break;\n\n    case 'PANE_STATE':\n        types.paneState.validate(val);\n        break;\n\n    case 'Boolean':\n        if ([true, false, 1, 0].indexOf(val) < 0) {\n            throw new TypeError(key + ' expects value of true, false, 1 or 0');\n        }\n        break;\n\n    case 'Float': \n        if (parseFloat(val) !== val) {\n            throw new TypeError(key + ' expects value as a Float number');\n        }\n        break;\n\n    case 'Integer':\n        if (parseInt(val) !== val) {\n            throw new TypeError(key + ' expects value as an Integer');\n        }\n        break;\n\n    case 'String': \n        if (typeof val !== 'string') {\n            throw new TypeError(key + ' expects value as a String');\n        }\n        break;\n\n    default:\n        break;\n    }\n};\n\nlet traverse = function (o, keyParts, func) {\n    for (let i in o) {\n        let thisKeyParts = keyParts.concat(i);\n        let thisKey = thisKeyParts.join('.');\n        let thisType = getObjItem(optsTypes, thisKey);\n\n        if (typeof thisType === 'string') {\n            let thisItem = o[i];\n            func(thisKey, thisItem, thisType); \n        }\n        if (o[i] !== null && typeof o[i] === 'object') {\n            traverse(o[i], thisKeyParts, func);\n        }\n    }\n};\n\nmodule.exports = (opts) => {\n    traverse(opts, [], validator);\n};"],"mappings":"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"}